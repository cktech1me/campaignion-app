import "./main.css";
import _babelRuntimeHelpersEsmObjectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _babelRuntimeHelpersEsmObjectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import { classNames, filterDOMProps, useSlotProps, useStyleProps } from "@react-spectrum/utils";
import _react from "react";
import { useProvider } from "@react-spectrum/provider";

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

// ASSET: /Users/govett/dev/react-spectrum/node_modules/@adobe/spectrum-css-temp/components/icon/vars.css
var $ffbf5ef7bfd070077c431d6207e20b1b$exports = {};
$ffbf5ef7bfd070077c431d6207e20b1b$exports = {
  "spectrum-Icon": "_spectrum-Icon_9925b",
  "spectrum-UIIcon": "_spectrum-UIIcon_9925b",
  "spectrum-Icon--sizeXXS": "_spectrum-Icon--sizeXXS_9925b",
  "spectrum-Icon--sizeXS": "_spectrum-Icon--sizeXS_9925b",
  "spectrum-Icon--sizeS": "_spectrum-Icon--sizeS_9925b",
  "spectrum-Icon--sizeM": "_spectrum-Icon--sizeM_9925b",
  "spectrum-Icon--sizeL": "_spectrum-Icon--sizeL_9925b",
  "spectrum-Icon--sizeXL": "_spectrum-Icon--sizeXL_9925b",
  "spectrum-Icon--sizeXXL": "_spectrum-Icon--sizeXXL_9925b",
  "spectrum--medium": "_spectrum--medium_9925b",
  "spectrum-UIIcon--large": "_spectrum-UIIcon--large_9925b",
  "spectrum-UIIcon--medium": "_spectrum-UIIcon--medium_9925b",
  "spectrum--large": "_spectrum--large_9925b",
  "spectrum-UIIcon-AlertMedium": "_spectrum-UIIcon-AlertMedium_9925b",
  "spectrum-UIIcon-AlertSmall": "_spectrum-UIIcon-AlertSmall_9925b",
  "spectrum-UIIcon-ArrowDownSmall": "_spectrum-UIIcon-ArrowDownSmall_9925b",
  "spectrum-UIIcon-ArrowLeftMedium": "_spectrum-UIIcon-ArrowLeftMedium_9925b",
  "spectrum-UIIcon-Asterisk": "_spectrum-UIIcon-Asterisk_9925b",
  "spectrum-UIIcon-CheckmarkMedium": "_spectrum-UIIcon-CheckmarkMedium_9925b",
  "spectrum-UIIcon-CheckmarkSmall": "_spectrum-UIIcon-CheckmarkSmall_9925b",
  "spectrum-UIIcon-ChevronDownMedium": "_spectrum-UIIcon-ChevronDownMedium_9925b",
  "spectrum-UIIcon-ChevronDownSmall": "_spectrum-UIIcon-ChevronDownSmall_9925b",
  "spectrum-UIIcon-ChevronLeftLarge": "_spectrum-UIIcon-ChevronLeftLarge_9925b",
  "spectrum-UIIcon-ChevronLeftMedium": "_spectrum-UIIcon-ChevronLeftMedium_9925b",
  "spectrum-UIIcon-ChevronRightLarge": "_spectrum-UIIcon-ChevronRightLarge_9925b",
  "spectrum-UIIcon-ChevronRightMedium": "_spectrum-UIIcon-ChevronRightMedium_9925b",
  "spectrum-UIIcon-ChevronRightSmall": "_spectrum-UIIcon-ChevronRightSmall_9925b",
  "spectrum-UIIcon-ChevronUpSmall": "_spectrum-UIIcon-ChevronUpSmall_9925b",
  "spectrum-UIIcon-CornerTriangle": "_spectrum-UIIcon-CornerTriangle_9925b",
  "spectrum-UIIcon-CrossLarge": "_spectrum-UIIcon-CrossLarge_9925b",
  "spectrum-UIIcon-CrossMedium": "_spectrum-UIIcon-CrossMedium_9925b",
  "spectrum-UIIcon-CrossSmall": "_spectrum-UIIcon-CrossSmall_9925b",
  "spectrum-UIIcon-DashSmall": "_spectrum-UIIcon-DashSmall_9925b",
  "spectrum-UIIcon-DoubleGripper": "_spectrum-UIIcon-DoubleGripper_9925b",
  "spectrum-UIIcon-FolderBreadcrumb": "_spectrum-UIIcon-FolderBreadcrumb_9925b",
  "spectrum-UIIcon-HelpMedium": "_spectrum-UIIcon-HelpMedium_9925b",
  "spectrum-UIIcon-HelpSmall": "_spectrum-UIIcon-HelpSmall_9925b",
  "spectrum-UIIcon-InfoMedium": "_spectrum-UIIcon-InfoMedium_9925b",
  "spectrum-UIIcon-InfoSmall": "_spectrum-UIIcon-InfoSmall_9925b",
  "spectrum-UIIcon-Magnifier": "_spectrum-UIIcon-Magnifier_9925b",
  "spectrum-UIIcon-SkipLeft": "_spectrum-UIIcon-SkipLeft_9925b",
  "spectrum-UIIcon-SkipRight": "_spectrum-UIIcon-SkipRight_9925b",
  "spectrum-UIIcon-Star": "_spectrum-UIIcon-Star_9925b",
  "spectrum-UIIcon-StarOutline": "_spectrum-UIIcon-StarOutline_9925b",
  "spectrum-UIIcon-SuccessMedium": "_spectrum-UIIcon-SuccessMedium_9925b",
  "spectrum-UIIcon-SuccessSmall": "_spectrum-UIIcon-SuccessSmall_9925b",
  "spectrum-UIIcon-TripleGripper": "_spectrum-UIIcon-TripleGripper_9925b"
};
var $ffbf5ef7bfd070077c431d6207e20b1b$$interop$default = $parcel$interopDefault($ffbf5ef7bfd070077c431d6207e20b1b$exports);

/**
 * Spectrum icons are clear, minimal, and consistent across platforms. They follow the focused and rational principles of the design system in both metaphor and style.
 */
export function Icon(props) {
  props = useSlotProps(props, 'icon');

  let {
    children,
    alt,
    scale,
    color,
    size,
    'aria-label': ariaLabel,
    'aria-hidden': ariaHidden,
    role = 'img'
  } = props,
      otherProps = _babelRuntimeHelpersEsmObjectWithoutProperties(props, ["children", "alt", "scale", "color", "size", "aria-label", "aria-hidden", "role"]);

  let {
    styleProps
  } = useStyleProps(otherProps);
  let provider = useProvider();
  let pscale = 'M';
  let pcolor = 'LIGHT';

  if (provider !== null) {
    pscale = provider.scale === 'large' ? 'L' : 'M';
    pcolor = provider.colorScheme === 'dark' ? 'DARK' : 'LIGHT';
  }

  if (scale === undefined) {
    scale = pscale;
  }

  if (color === undefined) {
    color = pcolor;
  }

  if (!ariaHidden || ariaHidden === 'false') {
    ariaHidden = undefined;
  } // Use user specified size, falling back to provider scale if size is undef


  let iconSize = size ? size : scale;
  return _react.cloneElement(children, _babelRuntimeHelpersEsmObjectSpread({}, filterDOMProps(otherProps), {}, styleProps, {
    scale: 'M',
    color,
    focusable: 'false',
    'aria-label': ariaLabel || alt,
    'aria-hidden': ariaLabel || alt ? ariaHidden : true,
    role,
    className: classNames($ffbf5ef7bfd070077c431d6207e20b1b$$interop$default, children.props.className, 'spectrum-Icon', "spectrum-Icon--size".concat(iconSize), styleProps.className)
  }));
}
export function UIIcon(props) {
  props = useSlotProps(props, 'icon');

  let {
    alt,
    children,
    'aria-label': ariaLabel,
    'aria-hidden': ariaHidden,
    role = 'img'
  } = props,
      otherProps = _babelRuntimeHelpersEsmObjectWithoutProperties(props, ["alt", "children", "aria-label", "aria-hidden", "role"]);

  let {
    styleProps
  } = useStyleProps(otherProps);
  let provider = useProvider();
  let scale = 'M';

  if (provider !== null) {
    scale = provider.scale === 'large' ? 'L' : 'M';
  }

  if (!ariaHidden || ariaHidden === 'false') {
    ariaHidden = undefined;
  }

  return _react.cloneElement(children, _babelRuntimeHelpersEsmObjectSpread({}, filterDOMProps(otherProps), {}, styleProps, {
    scale,
    focusable: 'false',
    'aria-label': ariaLabel || alt,
    'aria-hidden': ariaLabel || alt ? ariaHidden : true,
    role,
    className: classNames($ffbf5ef7bfd070077c431d6207e20b1b$$interop$default, children.props.className, 'spectrum-Icon', {
      ["spectrum-UIIcon-".concat(children.type['displayName'])]: children.type['displayName']
    }, styleProps.className)
  }));
}