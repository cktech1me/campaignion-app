require("./main.css");

var _babelRuntimeHelpersDefineProperty = $parcel$interopDefault(require("@babel/runtime/helpers/defineProperty"));

var _babelRuntimeHelpersExtends = $parcel$interopDefault(require("@babel/runtime/helpers/extends"));

var _babelRuntimeHelpersSlicedToArray = $parcel$interopDefault(require("@babel/runtime/helpers/slicedToArray"));

var _babelRuntimeHelpersObjectWithoutProperties = $parcel$interopDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classnames = $parcel$interopDefault(require("classnames"));

var _temp = require("@react-spectrum/utils");

var filterDOMProps = _temp.filterDOMProps;
var shouldKeepSpectrumClassNames = _temp.shouldKeepSpectrumClassNames;
var useDOMRef = _temp.useDOMRef;
var useStyleProps = _temp.useStyleProps;
var useMediaQuery = _temp.useMediaQuery;

var _temp2 = require("@react-aria/i18n");

var _Provider = _temp2.Provider;
var useLocale = _temp2.useLocale;

var _temp3 = require("@react-aria/overlays");

var ModalProvider = _temp3.ModalProvider;
var useModalProvider = _temp3.useModalProvider;

var _react2 = require("react");

var _react = $parcel$interopDefault(_react2);

var useContext = _react2.useContext;
var useEffect = _react2.useEffect;

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

/*
 * Copyright 2020 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */
var $e7c39633e1d2f66ca15289152a0097a3$var$loadingTypekitIds = new Set();

function $e7c39633e1d2f66ca15289152a0097a3$export$default(typeKitId) {
  if (!typeKitId || $e7c39633e1d2f66ca15289152a0097a3$var$loadingTypekitIds.has(typeKitId)) {
    return;
  }

  $e7c39633e1d2f66ca15289152a0097a3$var$loadingTypekitIds.add(typeKitId);
  var config = {
    kitId: typeKitId,
    scriptTimeout: 3000
  };
  var h = document.getElementsByTagName('html')[0];
  h.className += ' wf-loading';
  var t = setTimeout(function () {
    h.className = h.className.replace(/(\s|^)wf-loading(\s|$)/g, ' ');
    h.className += ' wf-inactive';
  }, config.scriptTimeout);
  var tk = document.createElement('script');
  var d = false;
  tk.src = "https://use.typekit.net/".concat(config.kitId, ".js");
  tk.type = 'text/javascript';
  tk.async = 'true';

  tk.onload = tk.onreadystatechange = function onload() {
    var a = this.readyState;

    if (d || a && a !== 'complete' && a !== 'loaded') {
      return;
    }

    d = true;
    clearTimeout(t);

    try {
      window.Typekit.load(config);
    } catch (b) {
      /* empty */
    }
  };

  var s = document.getElementsByTagName('script')[0];
  s.parentNode.insertBefore(tk, s);
}

// ASSET: /Users/govett/dev/react-spectrum/node_modules/@adobe/spectrum-css-temp/components/page/vars.css
var $d5f9f4756139967221378fd4aff16c6f$exports = {};
$d5f9f4756139967221378fd4aff16c6f$exports = {
  "spectrum": "_spectrum_a958b"
};
// ASSET: /Users/govett/dev/react-spectrum/node_modules/@adobe/spectrum-css-temp/components/typography/index.css
var $e638952e1f26803e52602862731a048$exports = {};
$e638952e1f26803e52602862731a048$exports = {
  "spectrum": "_spectrum_5b535",
  "spectrum-Body": "_spectrum-Body_5b535",
  "spectrum-Body--italic": "_spectrum-Body--italic_5b535"
};

function $be94f3d41cacd2d62c91f022056e44$export$useColorScheme(theme, defaultColorScheme) {
  var matchesDark = useMediaQuery('(prefers-color-scheme: dark)');
  var matchesLight = useMediaQuery('(prefers-color-scheme: light)'); // importance OS > default > omitted

  if (theme.dark && matchesDark) {
    return 'dark';
  }

  if (theme.light && matchesLight) {
    return 'light';
  }

  if (theme.dark && defaultColorScheme === 'dark') {
    return 'dark';
  }

  if (theme.light && defaultColorScheme === 'light') {
    return 'light';
  }

  if (!theme.dark) {
    return 'light';
  }

  if (!theme.light) {
    return 'dark';
  }

  return 'light';
}

function $be94f3d41cacd2d62c91f022056e44$export$useScale(theme) {
  var matchesFine = useMediaQuery('(any-pointer: fine)');

  if (matchesFine && theme.medium) {
    return 'medium';
  }

  if (theme.large) {
    return 'large';
  }

  return 'medium';
}

// ASSET: /Users/govett/dev/react-spectrum/packages/@react-spectrum/provider/package.json
var $c7e412c4049f69be774b838570a0f$exports = {};
$c7e412c4049f69be774b838570a0f$exports = JSON.parse("{\"name\":\"@react-spectrum/provider\",\"version\":\"3.0.0-rc.1\",\"description\":\"Spectrum UI components in React\",\"license\":\"Apache-2.0\",\"main\":\"dist/main.js\",\"module\":\"dist/module.js\",\"types\":\"dist/types.d.ts\",\"source\":\"src/index.ts\",\"files\":[\"dist\"],\"sideEffects\":false,\"targets\":{\"main\":{\"includeNodeModules\":[\"@adobe/spectrum-css-temp\"]},\"module\":{\"includeNodeModules\":[\"@adobe/spectrum-css-temp\"]}},\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/adobe-private/react-spectrum-v3\"},\"dependencies\":{\"@babel/runtime\":\"^7.6.2\",\"@react-aria/i18n\":\"^3.0.0-rc.1\",\"@react-aria/overlays\":\"^3.0.0-alpha.1\",\"@react-spectrum/utils\":\"^3.0.0-rc.1\",\"@react-types/provider\":\"^3.0.0-rc.1\",\"@react-types/shared\":\"^3.0.0-rc.1\",\"classnames\":\"^2.2.5\"},\"devDependencies\":{\"@adobe/spectrum-css-temp\":\"^3.0.0-alpha.1\"},\"peerDependencies\":{\"react\":\"^16.8.0\"},\"publishConfig\":{\"access\":\"public\"}}");

var $d05983693c80be83897ca3db02d07da7$var$Context = _react.createContext(null);

function $d05983693c80be83897ca3db02d07da7$var$Provider(props, ref) {
  var prevContext = useProvider();
  var prevColorScheme = prevContext && prevContext.colorScheme;
  var _props$theme = props.theme,
      theme = _props$theme === void 0 ? prevContext && prevContext.theme : _props$theme,
      defaultColorScheme = props.defaultColorScheme; // Hooks must always be called.

  var autoColorScheme = $be94f3d41cacd2d62c91f022056e44$export$useColorScheme(theme, defaultColorScheme);
  var autoScale = $be94f3d41cacd2d62c91f022056e44$export$useScale(theme);

  var _useLocale = useLocale(),
      prevLocale = _useLocale.locale; // if the new theme doesn't support the prevColorScheme, we must resort to the auto


  var usePrevColorScheme = !!theme[prevColorScheme]; // importance of color scheme props > parent > auto:(OS > default > omitted)

  var _props$colorScheme = props.colorScheme,
      colorScheme = _props$colorScheme === void 0 ? usePrevColorScheme ? prevColorScheme : autoColorScheme : _props$colorScheme,
      _props$scale = props.scale,
      scale = _props$scale === void 0 ? prevContext ? prevContext.scale : autoScale : _props$scale,
      typekitId = props.typekitId,
      _props$locale = props.locale,
      locale = _props$locale === void 0 ? prevContext ? prevLocale : null : _props$locale,
      children = props.children,
      isQuiet = props.isQuiet,
      isEmphasized = props.isEmphasized,
      isDisabled = props.isDisabled,
      isRequired = props.isRequired,
      isReadOnly = props.isReadOnly,
      validationState = props.validationState,
      otherProps = _babelRuntimeHelpersObjectWithoutProperties(props, ["colorScheme", "scale", "typekitId", "locale", "children", "isQuiet", "isEmphasized", "isDisabled", "isRequired", "isReadOnly", "validationState"]); // select only the props with values so undefined props don't overwrite prevContext values


  var currentProps = {
    version: $c7e412c4049f69be774b838570a0f$exports.version,
    theme: theme,
    colorScheme: colorScheme,
    scale: scale,
    isQuiet: isQuiet,
    isEmphasized: isEmphasized,
    isDisabled: isDisabled,
    isRequired: isRequired,
    isReadOnly: isReadOnly,
    validationState: validationState
  };
  var filteredProps = {};
  Object.entries(currentProps).forEach(function (_ref) {
    var _ref2 = _babelRuntimeHelpersSlicedToArray(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    return value !== undefined && (filteredProps[key] = value);
  }); // Merge options with parent provider

  var context = Object.assign({}, prevContext, filteredProps);
  useEffect(function () {
    $e7c39633e1d2f66ca15289152a0097a3$export$default(typekitId);
  }, [typekitId]); // Only wrap in a DOM node if the theme, colorScheme, or scale changed

  var contents = children;
  var domProps = filterDOMProps(otherProps);

  var _useStyleProps = useStyleProps(otherProps),
      styleProps = _useStyleProps.styleProps;

  if (!prevContext || props.locale || theme !== prevContext.theme || colorScheme !== prevContext.colorScheme || scale !== prevContext.scale || Object.keys(domProps).length > 0 || otherProps.UNSAFE_className || Object.keys(styleProps.style).length > 0) {
    contents = /*#__PURE__*/_react.createElement($d05983693c80be83897ca3db02d07da7$var$ProviderWrapper, _babelRuntimeHelpersExtends({}, props, {
      ref: ref
    }), contents);
  }

  return (/*#__PURE__*/_react.createElement($d05983693c80be83897ca3db02d07da7$var$Context.Provider, {
      value: context
    }, /*#__PURE__*/_react.createElement(_Provider, {
      locale: locale
    }, /*#__PURE__*/_react.createElement(ModalProvider, null, contents)))
  );
}
/**
 * Provider is the containing component that all other React Spectrum components
 * are the children of. Used to set locale, theme, scale, toast position and
 * provider, modal provider, and common props for children components. Providers
 * can be nested.
 */


var Provider = _react.forwardRef($d05983693c80be83897ca3db02d07da7$var$Provider);

exports.Provider = Provider;
var $d5f9f4756139967221378fd4aff16c6f$$interop$default = $parcel$interopDefault($d5f9f4756139967221378fd4aff16c6f$exports);
var $e638952e1f26803e52602862731a048$$interop$default = $parcel$interopDefault($e638952e1f26803e52602862731a048$exports);

var $d05983693c80be83897ca3db02d07da7$var$ProviderWrapper = _react.forwardRef(function ProviderWrapper(props, ref) {
  var _classNames;

  var children = props.children,
      otherProps = _babelRuntimeHelpersObjectWithoutProperties(props, ["children"]);

  var _useLocale2 = useLocale(),
      locale = _useLocale2.locale,
      direction = _useLocale2.direction;

  var _useProvider = useProvider(),
      theme = _useProvider.theme,
      colorScheme = _useProvider.colorScheme,
      scale = _useProvider.scale;

  var _useModalProvider = useModalProvider(),
      modalProviderProps = _useModalProvider.modalProviderProps;

  var _useStyleProps2 = useStyleProps(otherProps),
      styleProps = _useStyleProps2.styleProps;

  var domRef = useDOMRef(ref);
  var themeKey = Object.keys(theme[colorScheme])[0];
  var scaleKey = Object.keys(theme[scale])[0];

  var className = _classnames(styleProps.className, $d5f9f4756139967221378fd4aff16c6f$$interop$default['spectrum'], $e638952e1f26803e52602862731a048$$interop$default['spectrum'], theme[colorScheme][themeKey], theme[scale][scaleKey], theme.global ? Object.values(theme.global) : null, (_classNames = {
    'react-spectrum-provider': shouldKeepSpectrumClassNames,
    spectrum: shouldKeepSpectrumClassNames
  }, _babelRuntimeHelpersDefineProperty(_classNames, themeKey, shouldKeepSpectrumClassNames), _babelRuntimeHelpersDefineProperty(_classNames, scaleKey, shouldKeepSpectrumClassNames), _classNames));

  return (/*#__PURE__*/_react.createElement("div", _babelRuntimeHelpersExtends({}, filterDOMProps(otherProps), styleProps, modalProviderProps, {
      className: className,
      lang: locale,
      dir: direction,
      ref: domRef
    }), children)
  );
});

function useProvider() {
  return useContext($d05983693c80be83897ca3db02d07da7$var$Context);
}

exports.useProvider = useProvider;

function useProviderProps(props) {
  var context = useProvider();

  if (!context) {
    return props;
  }

  return Object.assign({}, {
    isQuiet: context.isQuiet,
    isEmphasized: context.isEmphasized,
    isDisabled: context.isDisabled,
    isRequired: context.isRequired,
    isReadOnly: context.isReadOnly,
    validationState: context.validationState
  }, props);
}

exports.useProviderProps = useProviderProps;