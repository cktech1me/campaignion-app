var _temp = require("@react-aria/utils");

var useId = _temp.useId;
var useLabels = _temp.useLabels;

function useLabel(props) {
  var id = props.id,
      label = props.label,
      ariaLabelledby = props['aria-labelledby'],
      ariaLabel = props['aria-label'],
      _props$labelElementTy = props.labelElementType,
      labelElementType = _props$labelElementTy === void 0 ? 'label' : _props$labelElementTy;
  id = useId(id);
  var labelId = useId();
  var labelProps = {};

  if (label) {
    ariaLabelledby = ariaLabelledby ? "".concat(ariaLabelledby, " ").concat(labelId) : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === 'label' ? id : undefined
    };
  } else if (!ariaLabelledby && !ariaLabel) {
    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');
  }

  var fieldProps = useLabels({
    id: id,
    'aria-label': ariaLabel,
    'aria-labelledby': ariaLabelledby
  });
  return {
    labelProps: labelProps,
    fieldProps: fieldProps
  };
}

exports.useLabel = useLabel;