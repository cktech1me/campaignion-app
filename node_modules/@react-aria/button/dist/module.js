import _babelRuntimeHelpersEsmObjectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import { mergeProps } from "@react-aria/utils";
import { useDOMPropsResponder, usePress } from "@react-aria/interactions";
import { useFocusable } from "@react-aria/focus";
export function useButton(props, ref) {
  let {
    elementType = 'button',
    isDisabled,
    onPress,
    onPressStart,
    onPressEnd,
    onPressChange,
    // @ts-ignore
    onClick: deprecatedOnClick,
    href,
    target,
    tabIndex,
    isSelected,
    validationState,
    'aria-expanded': ariaExpanded,
    'aria-haspopup': ariaHasPopup,
    type = 'button'
  } = props;
  let additionalProps;

  if (elementType !== 'button') {
    additionalProps = {
      role: 'button',
      tabIndex: isDisabled ? undefined : tabIndex || 0,
      href: elementType === 'a' && isDisabled ? undefined : href,
      target: elementType === 'a' ? target : undefined,
      type: elementType === 'input' ? type : undefined,
      disabled: elementType === 'input' ? isDisabled : undefined,
      'aria-disabled': !isDisabled || elementType === 'input' ? undefined : isDisabled
    };
  }

  let {
    pressProps,
    isPressed
  } = usePress({
    onPressStart,
    onPressEnd,
    onPressChange,
    onPress,
    isDisabled,
    ref
  });
  let {
    contextProps
  } = useDOMPropsResponder(ref);
  let {
    focusableProps
  } = useFocusable(props, ref);
  let handlers = mergeProps(pressProps, focusableProps);
  let interactions = mergeProps(contextProps, handlers);
  return {
    isPressed,
    // Used to indicate press state for visual
    buttonProps: mergeProps(interactions, _babelRuntimeHelpersEsmObjectSpread({
      'aria-haspopup': ariaHasPopup,
      'aria-expanded': ariaExpanded || ariaHasPopup && isSelected,
      'aria-checked': isSelected,
      'aria-invalid': validationState === 'invalid' ? true : null,
      disabled: isDisabled,
      type
    }, additionalProps || {}, {
      onClick: e => {
        if (deprecatedOnClick) {
          deprecatedOnClick(e);
          console.warn('onClick is deprecated, please use onPress');
        }
      }
    }))
  };
}