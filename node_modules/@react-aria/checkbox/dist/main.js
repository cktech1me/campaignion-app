var _babelRuntimeHelpersObjectSpread = $parcel$interopDefault(require("@babel/runtime/helpers/objectSpread2"));

var useEffect = require("react").useEffect;

var useToggle = require("@react-aria/toggle").useToggle;

function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}

function useCheckbox(props, state, inputRef) {
  var _useToggle = useToggle(props, state, inputRef),
      inputProps = _useToggle.inputProps;

  var isSelected = state.isSelected;
  var isIndeterminate = props.isIndeterminate;
  useEffect(function () {
    // indeterminate is a property, but it can only be set via javascript
    // https://css-tricks.com/indeterminate-checkboxes/
    if (inputRef.current) {
      inputRef.current.indeterminate = isIndeterminate;
    }
  }, [inputRef, isIndeterminate]);
  return {
    inputProps: _babelRuntimeHelpersObjectSpread({}, inputProps, {
      checked: isSelected,
      'aria-checked': isIndeterminate ? 'mixed' : isSelected
    })
  };
}

exports.useCheckbox = useCheckbox;