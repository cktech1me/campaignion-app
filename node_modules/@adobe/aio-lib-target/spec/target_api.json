{
   "openapi":"3.0.0",
   "info":{
      "description":"Targetâ€™s RESTful APIs enable you to manage and deliver personalized experiences across channels.",
      "version":"v1",
      "title":"Adobe Target APIs"
   },
   "servers":[
      {
         "url":"https://mc.adobe.io/{tenant-name}/",
         "variables":{
            "tenant-name":{
               "default":"changeme",
               "description":"The Tenant Name for Adobe Target"
            }
         }
      }
   ],
   "tags":[
      {
         "name":"activities"
      },
      {
         "name":"abactivity"
      },
      {
         "name":"activity"
      },
      {
         "name":"xtactivity"
      },
      {
         "name":"offers"
      },
      {
         "name":"audiences"
      },
      {
         "name":"properties"
      },
      {
         "name":"reports"
      },
      {
         "name":"mboxes"
      },
      {
         "name":"environments"
      },
      {
         "name":"batch"
      }
   ],
   "paths":{
      "/target/activities":{
         "get":{
            "tags":[
               "activities"
            ],
            "summary":"Get a list of activities.",
            "description":"Get a list of activities created in your Target account, with the ability to filter and sort by attributes.",
            "operationId":"getActivities",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Defines the number of items to return.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"Defines the first activity to return from the list of total activities. Used in conjunction with limit, you can provide pagination in your application for users to browse through a large set of activities.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"sortBy",
                  "in":"query",
                  "description":"Defines the sorting criteria on the returned items.",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "name",
                           "id",
                           "endsAt",
                           "thirdPartyId",
                           "state",
                           "type",
                           "priority"
                        ]
                     },
                     "enum":[
                        "name",
                        "id",
                        "endsAt",
                        "thirdPartyId",
                        "state",
                        "type",
                        "priority"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ActivityList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve list of activities",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activities retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/ab":{
         "post":{
            "tags":[
               "abactivity"
            ],
            "summary":"Create an AB activity.",
            "description":"Creates a new AB activity with the specified contents and returns the created activity.",
            "operationId":"createABActivity",
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v3+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Activity"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve list of activities",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activities retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/ab/{id}":{
         "get":{
            "tags":[
               "abactivity"
            ],
            "summary":"Get AB activity.",
            "description":"Fetch the current definition of an AB activity if it is found as referenced by the id.",
            "operationId":"getABActivity",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The id of the AB activity",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve AB activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; AB activity retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "abactivity"
            ],
            "summary":"Update AB activity.",
            "description":"Update the current definition of an AB activity if it is found as referenced by the id.",
            "operationId":"updateABActivity",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The id of the AB activity",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v3+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Activity"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update AB activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; AB activity retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "abactivity"
            ],
            "summary":"Delete AB activity.",
            "description":"Delete the current definition of an AB activity if it is found as referenced by the id.",
            "operationId":"deleteABActivity",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The id of the AB activity",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to delete AB activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; AB activity deletion failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/{id}/name":{
         "put":{
            "tags":[
               "activity"
            ],
            "summary":"Update AB activity name.",
            "description":"Update name of an activity if it is found as referenced by the id.",
            "operationId":"setName",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v1+json":{
                     "schema":{
                        "$ref": "#/components/schemas/Activity"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update name of activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activity name update failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/{id}/state":{
         "put":{
            "tags":[
               "activity"
            ],
            "summary":"Update Activity state.",
            "description":"Update state of an activity if it is found as referenced by the id.",
            "operationId":"setState",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v1+json":{
                     "schema":{
                        "$ref": "#/components/schemas/ActivityState"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update state of activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activity state update failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/{id}/priority":{
         "put":{
            "tags":[
               "activity"
            ],
            "summary":"Update Activity priority.",
            "description":"Update priority of an activity if it is found as referenced by the id.",
            "operationId":"setPriority",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v1+json":{
                     "schema":{
                        "$ref":"#/components/schemas/ActivityPriority"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update priority of activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activity priority update failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/{id}/schedule":{
         "put":{
            "tags":[
               "activity"
            ],
            "summary":"Update activity schedule.",
            "description":"Update schedule of an activity if it is found as referenced by the id.",
            "operationId":"setSchedule",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v1+json":{
                     "schema":{
                        "$ref":"#/components/schemas/ActivitySchedule"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update schedule of activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activity schedule update failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/{id}/changelog":{
         "get":{
            "tags":[
               "activity"
            ],
            "summary":"Get activity changelog.",
            "description":"Returns the changelog for a given activity id.",
            "operationId":"getChangeLog",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ActivityChangeLogList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to get changelog of activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activity changelog fetch failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/xt":{
         "post":{
            "tags":[
               "xtactivity"
            ],
            "summary":"Create XT activity.",
            "description":"Creates a new XT activity with the specified contents and returns the created activity.",
            "operationId":"createXTActivity",
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v3+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Activity"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to create XT activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Activities retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/xt/{id}":{
         "get":{
            "tags":[
               "xtactivity"
            ],
            "summary":"Get XT activity.",
            "description":"Fetch the current definition of XT activity if it is found as referenced by the id.",
            "operationId":"getXTActivity",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The id of the XT activity",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve XT activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; XT activity retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "xtactivity"
            ],
            "summary":"Update XT activity.",
            "description":"Update the current definition of XT activity if it is found as referenced by the id.",
            "operationId":"updateXTActivity",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The id of the XT activity",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v3+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Activity"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update XT activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; XT activity retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "xtactivity"
            ],
            "summary":"Delete XT activity.",
            "description":"Delete the current definition of an XT activity if it is found as referenced by the id.",
            "operationId":"deleteXTActivity",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The id of the XT activity",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Activity"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to delete XT activity",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; XT activity deletion failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/offers/content/{id}":{
         "get":{
            "tags":[
               "offer"
            ],
            "summary":"Get Offer.",
            "description":"Retrieves the contents of an offer given an offer id.",
            "operationId":"getOfferById",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Offer id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/vnd.adobe.target.v2+json":{
                        "schema":{
                           "$ref":"#/components/schemas/Offer"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve Offer",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Offer retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "offer"
            ],
            "summary":"Update Offer",
            "description":"Updates the content offer referenced by the id specified in the URL.",
            "operationId":"updateOffer",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Offer id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/vnd.adobe.target.v2+json":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Offer"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update Offer",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Offer retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "offer"
            ],
            "summary":"Delete Offer.",
            "description":"Deletes the content offer referenced by the provided id.",
            "operationId":"deleteOffer",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Offer id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/vnd.adobe.target.v2+json":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Offer"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to delete Offer",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Offer deletion failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/offers":{
         "get":{
            "tags":[
               "offers"
            ],
            "summary":"Get a list of Offers.",
            "description":"Retrieve the list of previously-created content offers. The parameters passed through the query string are optional and are used to indicate the sorting and filtering options.",
            "operationId":"getOffers",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Defines the number of items to return.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"Defines the first offers to return from the list of Offers. Used in conjunction with limit, you can provide pagination in your application for users to browse through a large set of offers.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"sortBy",
                  "in":"query",
                  "description":"Defines the sorting criteria on the returned items.",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "name",
                           "id",
                           "modifiedAt",
                           "type",
                           "workspace"
                        ]
                     },
                     "enum":[
                        "name",
                        "id",
                        "modifiedAt",
                        "type",
                        "workspace"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/OfferList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve list of Offers",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Offers retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/offers/content":{
         "post":{
            "tags":[
               "offers"
            ],
            "summary":"Create an Offer.",
            "description":"Creates a new content offer as defined by the request data.",
            "operationId":"createOffer",
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v2+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Offer"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Offer"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to create offer",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Offer creation failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/audiences/{id}":{
         "get":{
            "tags":[
               "audiences"
            ],
            "summary":"Get Audience.",
            "description":"Get the audience definition specified by the provided id.",
            "operationId":"getAudienceById",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Audience id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Audience"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve Audience",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Audience retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "put":{
            "tags":[
               "audience"
            ],
            "summary":"Update Audience",
            "description":"Update an audience with the new rules specified by the request data.",
            "operationId":"updateAudience",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Audience id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v3+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Audience"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Audience"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to update Audience",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Audience retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "delete":{
            "tags":[
               "audience"
            ],
            "summary":"Delete Audience.",
            "description":"Delete the audience referenced by the specified id.",
            "operationId":"deleteAudience",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Audience id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "type":"array",
                           "items":{
                              "$ref":"#/components/schemas/Audience"
                           }
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to delete Audience",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Audience deletion failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/audiences":{
         "get":{
            "tags":[
               "audiences"
            ],
            "summary":"Get a list of Audience.",
            "description":"List all available audiences with options to filter and sort by each available field.",
            "operationId":"getAudiences",
            "parameters":[
               {
                  "name":"limit",
                  "in":"query",
                  "description":"Defines the number of items to return.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"offset",
                  "in":"query",
                  "description":"Defines the first audience to return from the list of total offers. Used in conjunction with limit, you can provide pagination in your application for users to browse through a large set of offers.",
                  "required":false,
                  "schema":{
                     "type":"integer",
                     "format":"int32"
                  }
               },
               {
                  "name":"sortBy",
                  "in":"query",
                  "description":"Defines the sorting criteria on the returned items.",
                  "required":false,
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string",
                        "enum":[
                           "name",
                           "id",
                           "modifiedAt",
                           "origin",
                           "workspace"
                        ]
                     },
                     "enum":[
                        "name",
                        "id",
                        "modifiedAt",
                        "origin",
                        "workspace"
                     ]
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/AudienceList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve list of Audience",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Audiences retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         },
         "post":{
            "tags":[
               "audiences"
            ],
            "summary":"Create Audience.",
            "description":"Create a new audience as specified by the contents of the request and return the newly-created audience definition.",
            "operationId":"createAudience",
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v3+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Audience"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Audience"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to create Audience",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Audience creation failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/properties":{
         "get":{
            "tags":[
               "properties"
            ],
            "summary":"Get a list of properties.",
            "description":"Retrieve list of all properties.",
            "operationId":"getProperties",
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/PropertyList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve list of Properties",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Properties retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/properties/{id}":{
         "get":{
            "tags":[
               "properties"
            ],
            "summary":"Get property.",
            "description":"Retrieve property by property Id.",
            "operationId":"getAPropertyById",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The Property id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Property"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve Property",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Property retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/ab/{id}/report/performance":{
         "get":{
            "tags":[
               "reports"
            ],
            "summary":"Get activity performance.",
            "description":"Retrieve the performance report data for the AB activity referenced by the provided id.",
            "operationId":"getABPerformance",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Report"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve performance",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; performance retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/xt/{id}/report/performance":{
         "get":{
            "tags":[
               "reports"
            ],
            "summary":"Get activity performance.",
            "description":"Retrieve the performance report data for the Experience activity referenced by the provided id.",
            "operationId":"getXTPerformance",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Report"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve performance",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; performance retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/abt/{id}/report/performance":{
         "get":{
            "tags":[
               "reports"
            ],
            "summary":"Get activity performance.",
            "description":"Retrieve the performance report data for the Automated Personalization activity referenced by the provided id.",
            "operationId":"getABTPerformance",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Report"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve performance",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; performance retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/activities/ab/{id}/report/orders":{
         "get":{
            "tags":[
               "reports"
            ],
            "summary":"Get Orders report.",
            "description":"Retrieve the orders/audit report data for an AB, XT or Autotmated Personalization Activity",
            "operationId":"getAuditReport",
            "parameters":[
               {
                  "name":"id",
                  "in":"path",
                  "required":true,
                  "description":"The activity id",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/Report"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve Audit Report",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Audit Report retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/mboxes":{
         "get":{
            "tags":[
               "mboxes"
            ],
            "summary":"List Mboxes",
            "description":"List all available mboxes for a specific client with the options to filter and sort.",
            "operationId":"getMBoxes",
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MBoxList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve performance",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; performance retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/mbox/{mboxName}":{
         "get":{
            "tags":[
               "mboxes"
            ],
            "summary":"Get mbox parameters.",
            "description":"Get the list of mbox parameters.",
            "operationId":"getMBoxByName",
            "parameters":[
               {
                  "name":"mboxName",
                  "in":"path",
                  "required":true,
                  "description":"The MBox name",
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MBoxParameterList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve MBox attributes",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; MBox attributes retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/profileattributes/mbox":{
         "get":{
            "tags":[
               "mbox"
            ],
            "summary":"Get Profile Attributes.",
            "description":"Retrieve the list of available profile attributes and mbox parameters of type profile",
            "operationId":"getProfileAttributes",
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/MBoxAttributesList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve Profile Attributes",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Profile Attributes retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/environments":{
         "get":{
            "tags":[
               "environments"
            ],
            "summary":"Get environments",
            "description":"List all available environments with the options to filter and sort. Use the Environments API to retrieve the environment IDs corresponding to the various host groups set for the client.",
            "operationId":"getEnvironments",
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/EnvironmentList"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve Environments",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; Environments retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      },
      "/target/batch":{
         "post":{
            "tags":[
               "batch"
            ],
            "summary":"Execute Batch APIs",
            "description":"Multiple Admin APIs can be executed as a single batch request.",
            "operationId":"executeBatch",
            "requestBody":{
               "content":{
                  "application/vnd.adobe.target.v1+json":{
                     "schema":{
                        "$ref":"#/components/schemas/Batchs"
                     }
                  }
               }
            },
            "responses":{
               "200":{
                  "description":"successful operation",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/BatchResponse"
                        }
                     }
                  }
               },
               "400":{
                  "description":"Unable to retrieve performance",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "401":{
                  "description":"Unauthorized",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "403":{
                  "description":"Forbidden",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               },
               "500":{
                  "description":"External API error; performance retrieval failed",
                  "content":{
                     "application/json":{
                        "schema":{
                           "$ref":"#/components/schemas/ErrorStatus"
                        }
                     }
                  }
               }
            }
         }
      }
   },
   "components":{
      "schemas":{
         "ListActivityItem":{
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "thirdPartyId":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "priority":{
                  "type":"integer",
                  "format":"int64"
               },
               "modifiedAt":{
                  "type":"string"
               },
               "workspace":{
                  "type":"string"
               }
            }
         },
         "Activity":{
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "thirdPartyId":{
                  "type":"string"
               },
               "type":{
                  "type":"string"
               },
               "state":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "priority":{
                  "type":"integer",
                  "format":"int64"
               },
               "modifiedAt":{
                  "type":"string"
               },
               "startsAt":{
                  "type":"string"
               },
               "endsAt":{
                  "type":"string"
               },
               "workspace":{
                  "type":"string"
               },
               "propertyIds":{
                  "type":"array",
                  "items":{
                     "type":"integer"
                  }
               },
               "autoAllocateTraffic":{
                  "properties":{
                     "enabled":{
                        "type":"boolean"
                     },
                     "successEvaluationCriteria":{
                        "type":"string"
                     }
                  }
               }
            }
         },
         "ActivityList":{
            "properties":{
               "total":{
                  "type":"integer",
                  "format":"int64"
               },
               "offset":{
                  "type":"string"
               },
               "limit":{
                  "type":"integer",
                  "format":"int64"
               },
               "activities":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ListActivityItem"
                  }
               }
            }
         },
         "ActivityChangeLog":{
            "properties":{
               "modifiedAt":{
                  "type":"string"
               },
               "activityParameters":{
                  "type":"object"
               }
            }
         },
         "ActivityChangeLogList":{
            "properties":{
               "total":{
                  "type":"integer",
                  "format":"int64"
               },
               "offset":{
                  "type":"string"
               },
               "limit":{
                  "type":"integer",
                  "format":"int64"
               },
               "activityChangelogs":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/ActivityChangeLog"
                  }
               }
            }
         },
         "ActivityState": {

              "properties":{
                 "id":{
                    "type":"integer",
                    "format":"int64"
                 },
                 "state":{
                    "type":"string"
                 },
                 "modifiedAt":{
                    "type":"string"
                 }
          }
        },
        "ActivityPriority": {

             "properties":{
                "id":{
                   "type":"integer",
                   "format":"int64"
                },
                "priority":{
                   "type":"string"
                },
                "modifiedAt":{
                   "type":"string"
                }
         }
       },
       "ActivityName": {

            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "name":{
                  "type":"string"
               },
               "modifiedAt":{
                  "type":"string"
               }
        }
      },
      "ActivitySchedule": {

           "properties":{
              "id":{
                 "type":"integer",
                 "format":"int64"
              },
              "startsAt":{
                 "type":"string"
              },
              "endsAt":{
                 "type":"string"
              },
              "modifiedAt":{
                 "type":"string"
              }
       }
     },
         "Offer":{
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "type":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "content":{
                  "type":"string"
               },
               "modifiedAt":{
                  "type":"string"
               },
               "workspace":{
                  "type":"string"
               }
            }
         },
         "OfferList":{
            "properties":{
               "total":{
                  "type":"integer",
                  "format":"int64"
               },
               "offset":{
                  "type":"string"
               },
               "limit":{
                  "type":"integer",
                  "format":"int64"
               },
               "offers":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Offer"
                  }
               }
            }
         },
         "Audience":{
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "origin":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "modifiedAt":{
                  "type":"string"
               },
               "workspace":{
                  "type":"string"
               },
               "targetRule":{
                  "type":"object"
               }
            }
         },
         "AudienceList":{
            "properties":{
               "total":{
                  "type":"integer",
                  "format":"int64"
               },
               "offset":{
                  "type":"string"
               },
               "limit":{
                  "type":"integer",
                  "format":"int64"
               },
               "offers":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Audience"
                  }
               }
            }
         },
         "Property":{
            "properties":{
               "id":{
                  "type":"integer",
                  "format":"int64"
               },
               "channel":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "description":{
                  "type":"string"
               },
               "segmentId":{
                  "type":"integer"
               },
               "workspaces":{
                  "type":"array"
               }
            }
         },
         "PropertyList":{
            "properties":{
               "total":{
                  "type":"integer",
                  "format":"int64"
               },
               "offset":{
                  "type":"string"
               },
               "limit":{
                  "type":"integer",
                  "format":"int64"
               },
               "offers":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Property"
                  }
               }
            }
         },
         "MBox":{
            "properties":{
               "lastRequestedAt":{
                  "type":"string"
               },
               "name":{
                  "type":"string"
               },
               "status":{
                  "type":"string"
               }
            }
         },
         "MBoxList":{
            "properties":{
               "total":{
                  "type":"integer",
                  "format":"int64"
               },
               "offset":{
                  "type":"string"
               },
               "limit":{
                  "type":"integer",
                  "format":"int64"
               },
               "offers":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/MBox"
                  }
               }
            }
         },
         "MBoxParameter":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "parameterType":{
                  "type":"string"
               }
            }
         },
         "MBoxParameterList":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "offers":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/MBoxParameter"
                  }
               }
            }
         },
         "MBoxAttributesList":{
            "properties":{
               "mboxProfileAttributes":{
                  "type":"array",
                  "items":{
                     "type":"string"
                  }
               }
            }
         },
         "Environment":{
            "properties":{
               "id":{
                  "type":"integer"
               },
               "name":{
                  "type":"string"
               }
            }
         },
         "EnvironmentList":{
            "properties":{
               "total":{
                  "type":"integer",
                  "format":"int64"
               },
               "offset":{
                  "type":"string"
               },
               "limit":{
                  "type":"integer",
                  "format":"int64"
               },
               "offers":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Environment"
                  }
               }
            }
         },
         "Header":{
            "properties":{
               "name":{
                  "type":"string"
               },
               "value":{
                  "type":"string"
               }
            }
         },
         "BatchOperation":{
            "properties":{
               "operationId":{
                  "type":"integer",
                  "format":"int64"
               },
               "dependsOnOperationIds~":{
                  "type":"array"
               },
               "method":{
                  "type":"string"
               },
               "relativeUrl":{
                  "type":"string"
               },
               "headers~":{
                  "type":"array"
               },
               "body":{
                  "type":"object"
               }
            }
         },
         "Batchs":{
            "properties":{
               "results":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/BatchOperation"
                  }
               }
            }
         },
         "BatchResult":{
            "properties":{
               "operationId":{
                  "type":"integer",
                  "format":"int64"
               },
               "skipped":{
                  "type":"boolean"
               },
               "statusCode":{
                  "type":"integer",
                  "format":"int64"
               },
               "headers":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/Header"
                  }
               },
               "body":{
                  "type":"object"
               }
            }
         },
         "BatchResponse":{
            "properties":{
               "results":{
                  "type":"array",
                  "items":{
                     "$ref":"#/components/schemas/BatchResult"
                  }
               }
            }
         },
         "Report":{
            "type":"object"
         },
         "ErrorStatus":{
            "type":"object"
         }
      }
   }
}
